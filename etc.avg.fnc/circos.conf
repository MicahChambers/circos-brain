
<<include ideogram.conf>>

chromosomes_units = 100
<<include ticks.conf>>

<image>
dir   = .
file  = circos.png
png   = yes
svg   = yes
radius         = 1500p
auto_alpha_colors = yes
auto_alpha_steps  = 9
angle_offset* = -89 #for use with default spacing at top
#angle_offset* = -88.5 #for use with 5r spacing at top
#angle_offset* = -81.5 #for use with 10r spacing at top
</image>

### single genomes

karyotype = data/segments.txt

<<include segment.order.conf>>

chromosomes_reverse = /.*-l/

#hm_r      = 0.96
hm_r      = 0.95
hm_w      = 0.030
hm_pad    = 0.000

#hm_colors = greys-4-seq,greys-4-seq,greys-4-seq,greys-4-seq,greys-4-seq
hm_colors = reds-4-seq,oranges-4-seq,greens-4-seq,blues-4-seq,purples-4-seq

<plots>

<<include vol.conf>>
<<include area.conf>>
<<include thickness.conf>>
<<include curv.conf>>
<<include strengths.conf>>

<plot>
type       = text
file       = data/structure.label.txt
color      = black
label_font = default
label_size = 20
r0         = 1r
r1         = 1.5r
rpadding   = 10p
</plot>

</plots>

<links>

<link>
file   = data/links.txt
radius = 0.825r # eval(sprintf("%fr",conf(hm_r)-counter(heatmap)*(conf(hm_w)+conf(hm_pad))+conf(hm_w)))

bezier_radius = 0r
bezier_radius_purity = 0.5
crest         = 0.25
#thickness     = 5
color         = black

<rules>

<rule>
# this rule is part of variant #1
# to use it, set use=yes and also adjust radius above to 0.7r
use       = no
condition = var(chr1) eq var(chr2)
bezier_radius = 1r
radius    = 0.71r
flow      = continue
</rule>

<rule>
flow = continue
z = eval(remap_int(var(score),0,1,1,10)) 
</rule>

<rule>
condition = abs(var(score)) < 0.3
hide = yes
</rule>

<rule>
condition = var(score) < .5
color     = eval(sprintf("blues-9-seq-%d",remap_int(abs(var(score)),0,1,1,9)))
thickness = eval(remap_int(var(score),0,1,4,10)) 
</rule>

<rule>
condition = var(score) >= .5 && var(score) < .6
color     = eval(sprintf("greens-9-seq-%d",remap_int(abs(var(score)),0,1,1,9)))
thickness = eval(remap_int(var(score),0,1,4,10)) 
</rule>

<rule>
condition = var(score) >= .6 
color     = eval(sprintf("reds-9-seq-%d",remap_int(var(score),0,1,1,9)))
thickness = eval(remap_int(var(score),0,1,4,10)) 
</rule>

</rules>

</link>

</links>

<<include etc/colors_fonts_patterns.conf>>
<colors>
<<include color.brain.conf>>
</colors>

restrict_parameter_names* = no
<<include etc/housekeeping.conf>>



