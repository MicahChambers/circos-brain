
<<include ideogram.conf>>

chromosomes_units = 100
<<include ticks.conf>>

<image>
dir   = .
file  = circos.png
png   = yes
svg   = yes
radius         = 1500p
auto_alpha_colors = yes
auto_alpha_steps  = 9
angle_offset* = -89 #for use with default spacing at top
#angle_offset* = -88.5 #for use with 5r spacing at top
#angle_offset* = -81.5 #for use with 10r spacing at top
</image>

### single genomes

karyotype = data/segments.txt

<<include segment.order.conf>>
<colors>
<<include andrei.colors.conf>>
</colors>

chromosomes_reverse = /.*-l/

#hm_r      = 0.96
hm_r      = 0.95
hm_w      = 0.030
hm_pad    = 0.000

hm_colors = winter257,spring257,summer257,autumn257,vlred,copper257,reds-9-seq,rdbu-10-div,reds-9-seq,reds-9-seq,reds-9-seq

#these first 4 are going to be constant across connectivity typ
#hm_min = 10,1,1,0.01,
#hm_max = 25000,6000,5,0.3,
hm_min = 10   ,   1,  1,  0.01,  0,  24, 0,  10,  9,  0.06
hm_max = 25000,6000,  5,   0.3,  0,  40, 0,  15,  14, 0.1

<plots>

<<include heatmap.conf>> #GrayVol
<<include heatmap.conf>> #SurfArea
<<include heatmap.conf>> #ThickAvg
<<include heatmap.conf>> #MeanCurv

<<include heatmap.blank.conf>> #colorized placeholder

<<include heatmap.conf>> #Strengths
<<include heatmap.conf>> #betweenness
<<include heatmap.conf>> #eccentricity
<<include heatmap.conf>> #nodal efficiency
<<include heatmap.conf>> #eigenvector centrality 

<plot>
type       = text
file       = data/structure.label.txt
color      = black
label_font = default
label_size = 20
r0         = 1r
r1         = 1.5r
rpadding   = 10p
</plot>

</plots>

<links>

<link>
file   = data/links.txt
radius = eval(sprintf("%fr",conf(hm_r)-counter(heatmap)*(conf(hm_w)+conf(hm_pad))+conf(hm_w)))

bezier_radius = 0r
bezier_radius_purity = 0.5
crest         = 0.25
#thickness     = 5
color         = black

<rules>

<rule>
# this rule is part of variant #1
# to use it, set use=yes and also adjust radius above to 0.7r
use       = no
condition = var(chr1) eq var(chr2)
bezier_radius = 1r
radius    = 0.71r
flow      = continue
</rule>

<rule>
condition = abs(var(score)) < 0.08
hide = yes
</rule>

<rule>
condition = var(score) < .09
color     = eval(sprintf("blues-9-seq-%d",remap_int(abs(var(score)),.08,.11,1,9)))
thickness = eval(remap_int(var(score),0,.11,1,7,11)) 
</rule>

<rule>
condition = var(score) >= .09 && var(score) < .1
color     = eval(sprintf("greens-9-seq-%d",remap_int(abs(var(score)),0.08,.11,1,9)))
thickness = eval(remap_int(var(score),0,.11,7,11)) 
</rule>

<rule>
condition = var(score) >= .1
color     = eval(sprintf("reds-9-seq-%d",remap_int(var(score),0.08,.11,1,9)))
thickness = eval(remap_int(var(score),0,.11,7,11)) 
</rule>

</rules>

</link>

</links>

<<include etc/colors_fonts_patterns.conf>>
<colors>
<<include color.brain.conf>>
</colors>

restrict_parameter_names* = no
<<include etc/housekeeping.conf>>



